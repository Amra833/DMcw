-- Create the USERS table
CREATE TABLE users (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  fullname VARCHAR2(100) NOT NULL,
  email VARCHAR2(100) NOT NULL UNIQUE,
  password VARCHAR2(255) NOT NULL
);

DROP TABLE users CASCADE CONSTRAINTS;
CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fullname VARCHAR2(100),
    email VARCHAR2(100) UNIQUE,
    password VARCHAR2(255)
);


SELECT * FROM users;

DROP TABLE SUPPLIERS CASCADE CONSTRAINTS;
CREATE TABLE SUPPLIERS (
    supplier_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sup_fullname    VARCHAR2(100),
    sup_location    VARCHAR2(100),
    sup_product     VARCHAR2(100),
    sup_photo       VARCHAR2(255) -- store image file path or URL
);

--supplier PLSQL
CREATE OR REPLACE PROCEDURE Add_Supplier (
    p_name       IN VARCHAR2,
    p_location   IN VARCHAR2,
    p_product    IN VARCHAR2,
    p_photo      IN VARCHAR2
) IS
BEGIN
    INSERT INTO SUPPLIERS (sup_fullname, sup_location, sup_product, sup_photo)
    VALUES (p_name, p_location, p_product, p_photo);

    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Supplier added successfully: ' || p_name);
END;
/

--supplier delete function
CREATE OR REPLACE FUNCTION delete_supplier(p_supplier_id IN NUMBER) RETURN VARCHAR2 IS
BEGIN
    DELETE FROM SUPPLIERS WHERE supplier_id = p_supplier_id;
    COMMIT;
    RETURN 'Supplier deleted successfully.';
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'Error occurred while deleting the supplier.';
END;
/

--supplier insert function
CREATE OR REPLACE FUNCTION insert_supplier(p_name IN VARCHAR2, p_location IN VARCHAR2, p_product IN VARCHAR2, p_photo IN VARCHAR2) RETURN VARCHAR2 IS
BEGIN
    INSERT INTO SUPPLIERS (sup_fullname, sup_location, sup_product, sup_photo)
    VALUES (p_name, p_location, p_product, p_photo);
    COMMIT;
    RETURN 'Supplier added successfully.';
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'Error occurred while adding the supplier.';
END;
/

--supplier update function
CREATE OR REPLACE FUNCTION update_supplier(p_supplier_id IN NUMBER, p_name IN VARCHAR2, p_location IN VARCHAR2, p_product IN VARCHAR2, p_photo IN VARCHAR2) RETURN VARCHAR2 IS
BEGIN
    UPDATE SUPPLIERS
    SET sup_fullname = p_name,
        sup_location = p_location,
        sup_product = p_product,
        sup_photo = p_photo
    WHERE supplier_id = p_supplier_id;
    COMMIT;
    RETURN 'Supplier updated successfully.';
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'Error occurred while updating the supplier.';
END;
/

SELECT * FROM suppliers;

--products table 
CREATE TABLE PRODUCTS (
    product_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name VARCHAR2(100) NOT NULL,
    price_per_unit NUMBER(10, 2) NOT NULL,
    category VARCHAR2(50) CHECK (category IN (
        'Fruits', 
        'Vegetables', 
        'Dairy Products', 
        'Baked Goods', 
        'Handmade Crafts'
    )) NOT NULL
);
ALTER TABLE PRODUCTS
ADD (product_image BLOB);

SELECT * FROM products;

--product table
DROP TABLE PRODUCTS;

DROP TABLE PRODUCTS CASCADE CONSTRAINTS;
CREATE TABLE PRODUCTS (
    product_id NUMBER PRIMARY KEY,               
    product_name VARCHAR2(255) NOT NULL,        
    product_price NUMBER(10, 2) NOT NULL,        
    product_image VARCHAR2(255),                
    category VARCHAR2(50) CHECK (category IN ('Fruits', 'Vegetables', 'Dairy Products', 'Baked Goods', 'Handmade Crafts'))  -- Fixed categories
);

SELECT * FROM products;
DROP TABLE PRODUCTS;

CREATE TABLE PRODUCTS (
    product_id NUMBER PRIMARY KEY,               
    product_name VARCHAR2(255) NOT NULL,        
    product_price NUMBER(10, 2) NOT NULL,        
    product_image VARCHAR2(255),                
    category VARCHAR2(50) CHECK (category IN ('Fruits', 'Vegetables', 'Dairy Products', 'Baked Goods', 'Handmade Crafts'))  -- Fixed categories
);

SELECT * FROM PRODUCTS FETCH FIRST 1 ROWS ONLY;

CREATE TABLE orders (
    order_id           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name      VARCHAR2(100),
    delivery_address   VARCHAR2(255),
    payment_method     VARCHAR2(50),
    delivery_method    VARCHAR2(50),
    order_status       VARCHAR2(50),
    order_date         DATE DEFAULT SYSDATE
);
CREATE TABLE order_items (
    item_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id    NUMBER,
    product_id  NUMBER,
    quantity    NUMBER,
    unit_price  NUMBER(10,2),
    
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
    -- You can also add FOREIGN KEY (product_id) REFERENCES products(product_id) if you have a products table
);


